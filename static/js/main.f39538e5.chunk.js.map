{"version":3,"sources":["league-settings.js","App.js","reportWebVitals.js","index.js"],"names":["settings","LOSS","ADD","TRADE","ID","WEEKS","baseUrl","getLeague","a","fetch","Settings","then","res","json","getRosters","getUsers","getTransactions","leg","getMatchups","getNFLState","TRANSACTION_TYPE","App","useState","setLeague","losers","setLosers","members","setMembers","nflState","setNflState","transactions","setTransactions","currentPage","setCurrentPage","Array","fill","map","_","i","pages","setPages","useEffect","Promise","all","league","rosters","users","season_type","user_id","display_name","metadata","team_name","avatar","find","roster","owner_id","roster_id","wins","losses","ties","sort","b","season_start_date","parseISO","week_selected","addWeeks","interval","start","previousTuesday","end","nextTuesday","transaction_queries","push","resolve","matchups","rest","flat","reduce","acc","curr","matchup_id","points","prev","Object","values","trans_totals","adds","status","type","status_updated","updated_date","Date","isWithinInterval","forEach","trades","className","scope","adds_total","trades_total","loss","loser","header","record","total","data","alt","src","onClick","first","last","page","props","handlePageSelect","length","max","season","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f39538e5.chunk.js","sourcesContent":["const settings = {\n  LOSS: 10,\n  ADD: 3,\n  TRADE: 10,\n  // ID: '598360399619874816',\n  ID: '741497602050265088',\n  WEEKS: 14\n}\n\nexport default settings","import './App.css';\nimport Settings from './league-settings'\nimport { useEffect, useState } from 'react'\nimport { previousTuesday, parseISO, isWithinInterval } from 'date-fns';\nimport { addWeeks, nextTuesday } from 'date-fns/esm';\n\nconst baseUrl = 'https://api.sleeper.app/v1'\nasync function getLeague() {\n  return fetch(`${baseUrl}/league/${Settings.ID}`).then(res => res.json())\n}\n\nasync function getRosters() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/rosters`).then(res => res.json())\n}\n\nasync function getUsers() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/users`).then(res => res.json())\n}\n\nasync function getTransactions(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/transactions/${leg}`).then(res => res.json())\n}\nasync function getMatchups(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/matchups/${leg}`).then(res => res.json())\n}\n\nasync function getNFLState() {\n  return fetch(`${baseUrl}/state/nfl`).then(res => res.json())\n}\n\nconst TRANSACTION_TYPE = {\n  TRADE: 'trade',\n  WAIVER: 'waiver',\n  FREE_AGENT: 'free_agent'\n}\n\nconst MAX_PAGES = 5\nfunction App() {\n  // eslint-disable-next-line\n  const [league, setLeague] = useState({})\n  const [losers, setLosers] = useState([])\n  const [members, setMembers] = useState([])\n  // eslint-disable-next-line\n  const [nflState, setNflState] = useState({});\n  const [transactions, setTransactions] = useState({})\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pages, setPages] = useState(new Array(MAX_PAGES).fill(0).map((_, i) => i + 1))\n  useEffect(() => {\n    (async () => {\n      const [league, rosters, users, nflState] = await Promise.all([\n        getLeague(),\n        getRosters(),\n        getUsers(),\n        getNFLState(),\n      ])\n      setLeague(league)\n      setNflState(nflState)\n      if (nflState.season_type === 'regular') {\n        setCurrentPage(nflState.leg)\n      }\n      const members = users.map(({\n        user_id,\n        display_name,\n        metadata: {\n          team_name,\n          avatar\n        }\n      }) => {\n        const {\n          roster_id,\n          settings: {\n            wins,\n            losses,\n            ties\n          }\n        } = rosters.find(roster => roster.owner_id === user_id)\n        return {\n          user_id,\n          roster_id,\n          avatar,\n          display_name,\n          team_name,\n          wins,\n          losses,\n          ties\n        }\n      })\n      setMembers(members.sort((a, b) => a.roster_id - b.roster_id))\n    })()\n  }, [])\n\n  useEffect(() => {\n    if (!nflState.season_start_date) return\n    // season always starts on a thursday be we want tuesday\n    const season_start_date = parseISO(nflState.season_start_date)\n    const week_selected = addWeeks(season_start_date, currentPage - 1)\n    const interval = { start: previousTuesday(week_selected), end: nextTuesday(week_selected) }\n\n    const transaction_queries = [getTransactions(currentPage)]\n    if (currentPage > 1) {\n      transaction_queries.push(getTransactions(currentPage - 1))\n    } else {\n      transaction_queries.push(Promise.resolve([]))\n    }\n    (async () => {\n      const [matchups, ...rest] = await Promise.all([\n        getMatchups(currentPage),\n        ...transaction_queries,\n      ])\n      const transactions = rest.flat()\n      const losers = matchups.reduce((acc, curr) => {\n        const { matchup_id, points, roster_id } = curr\n        const prev = acc[matchup_id]\n        if (prev && prev.points !== points) {\n          acc[matchup_id] = prev.points < points ? prev : { roster_id, points }\n        } else if (!prev) {\n          acc[matchup_id] = { roster_id, points }\n        } else {\n          delete acc[matchup_id]\n        }\n        return acc\n      }, {})\n      setLosers(Object.values(losers))\n      const trans_totals = transactions.reduce((acc, { adds, status, type, status_updated }) => {\n        if (status !== 'complete' || !adds) return acc\n        const updated_date = new Date(status_updated)\n        /**@todo  Date ranges needs work.\n         *        Need to only include transactions from previous tuesday(12am) through following monday (before tuesday 12am)\n        */\n        if (!isWithinInterval(updated_date, interval)) return acc\n        switch (type) {\n          case TRANSACTION_TYPE.WAIVER:\n          case TRANSACTION_TYPE.FREE_AGENT: {\n            // adds are maps of player_id => roster_id\n            Object.values(adds).forEach(roster_id => {\n              const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n              acc[roster_id] = { ...prev, adds: prev.adds ? prev.adds + 1 : 1 }\n            })\n            break\n          }\n          case TRANSACTION_TYPE.TRADE: {\n            Object.values(adds).forEach(roster_id => {\n              const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n              acc[roster_id] = { ...prev, trades: prev.trades ? prev.trades + 1 : 1 }\n            })\n            break\n          }\n          default:\n        }\n        return acc\n      }, {})\n      setTransactions(trans_totals)\n    })()\n  }, [currentPage, nflState.season_start_date])\n\n  function handlePageLeft() {\n    const first = pages[0] - MAX_PAGES\n    const last = pages[0] - 1\n    setPages(new Array(MAX_PAGES).fill(0).map((_, i) => first + i))\n    setCurrentPage(last)\n  }\n  function handlePageRight() {\n    const max = nflState.season.type === 'regular' ? nflState.leg : Settings.WEEKS\n    const first = pages[pages.length - 1] + 1\n    const pagesLeft = MAX_PAGES > max + 1 - first ? max + 1 - first : MAX_PAGES\n    setPages(new Array(pagesLeft).fill(0).map((_, i) => first + i))\n    setCurrentPage(first)\n  }\n\n  async function handlePageSelect(leg) {\n    setCurrentPage(leg)\n  }\n\n  function genTableData() {\n    const table_data = members.map(({ avatar, roster_id, display_name, team_name, wins, losses, ties }) => {\n      const { adds, trades } = transactions[roster_id] ?? { adds: 0, trades: 0 }\n      const adds_total = adds * Settings.ADD\n      const trades_total = trades * Settings.TRADE\n      const loss = losers.find((loser) => roster_id === loser.roster_id) ? 1 : 0\n      return {\n        avatar,\n        header: team_name ?? display_name,\n        roster_id,\n        loss,\n        record: `${wins}-${losses}-${ties}`,\n        adds,\n        adds_total,\n        trades,\n        trades_total,\n        total: adds_total + trades_total + (loss * Settings.LOSS)\n      }\n    })\n    return table_data\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"table-responsive\">\n        <table className=\"table caption-top\">\n          <caption>\n            <strong>Weekly Costs Summary:</strong>\n            <br />\n            <span>\n              The Loss column is calculated based on the current state of the weeks matchup.\n              Check back after the week has ended for the most accurate results.\n          </span>\n          </caption>\n          <thead>\n            <tr className=\"table-dark\">\n              <th className=\"avatar\"></th>\n              <th scope=\"col\">Team</th>\n              <th scope=\"col\">Record</th>\n              <th scope=\"col\">Adds ($3/ea)</th>\n              <th scope=\"col\">Trades ($10/ea)</th>\n              <th scope=\"col\">Loss</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              genTableData().map(data => (\n                <tr key={data.roster_id}>\n                  <td className=\"avatar\">\n                    {data.avatar && <img alt={`${data.header} avatar`} src={data.avatar} />}\n                  </td>\n                  <th scope=\"row\">{data.header}</th>\n                  <td>{data.record}</td>\n                  <td>${data.adds_total} ({data.adds})</td>\n                  <td>${data.trades_total} ({data.trades})</td>\n                  <td>${data.loss * Settings.LOSS}</td>\n                  <td>${data.total}</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n      <div className=\"content\">\n        <nav aria-label=\"Table pagination\">\n          <ul className=\"pagination\">\n            <li className={`page-item ${pages[0] === 1 ? 'disabled' : ''}`}>\n              <button className=\"page-link\" onClick={handlePageLeft} aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n              </button>\n            </li>\n            {\n              pages.map(page => {\n                const props = {\n                  className: 'page-item'\n                }\n                if (currentPage === page) {\n                  props.className = `${props.className} active`\n                  props[\"aria-current\"] = \"page\"\n                }\n                return (\n                  <li\n                    key={`page-item-${page}`}\n                    {...props}\n                  >\n                    <button key={`page-link-${page}`} className=\"page-link\" onClick={() => { handlePageSelect(page) }}>{page}</button>\n                  </li>\n                )\n              })\n            }\n            <li className={`page-item ${pages[pages.length - 1] === Settings.WEEKS ? 'disabled' : ''}`}>\n              <button className=\"page-link\" onClick={handlePageRight} aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}