{"version":3,"sources":["league-settings.js","App.js","reportWebVitals.js","index.js"],"names":["settings","LOSS","ADD","TRADE","ID","WEEKS","baseUrl","getLeague","a","fetch","Settings","then","res","json","getRosters","getUsers","getTransactions","leg","getMatchups","getNFLState","TRANSACTION_TYPE","App","useState","setLeague","losers","setLosers","members","setMembers","setNflState","transactions","setTransactions","e","target","value","Number","isNaN","Promise","all","matchups","reduce","acc","curr","matchup_id","points","roster_id","prev","Object","values","trans_totals","adds","status","type","forEach","trades","useEffect","league","rosters","users","nflState","map","user_id","display_name","team_name","metadata","find","roster","owner_id","wins","losses","ties","sort","b","className","htmlFor","name","onChange","disabled","selected","Array","fill","_","i","console","log","adds_total","trades_total","loss","loser","header","record","total","data","scope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33109d24.chunk.js","sourcesContent":["const settings = {\n  LOSS: 10,\n  ADD: 3,\n  TRADE: 10,\n  ID: '598360399619874816',\n  // ID: '726147679188553728',\n  WEEKS: 14\n}\n\nexport default settings","import './App.css';\nimport Settings from './league-settings'\nimport { useEffect, useState } from 'react'\n\nconst baseUrl = 'https://api.sleeper.app/v1'\nasync function getLeague() {\n  return fetch(`${baseUrl}/league/${Settings.ID}`).then(res => res.json())\n}\n\nasync function getRosters() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/rosters`).then(res => res.json())\n}\n\nasync function getUsers() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/users`).then(res => res.json())\n}\n\nasync function getTransactions(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/transactions/${leg}`).then(res => res.json())\n}\nasync function getMatchups(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/matchups/${leg}`).then(res => res.json())\n}\n\nasync function getNFLState() {\n  return fetch(`${baseUrl}/state/nfl`).then(res => res.json())\n}\n\nconst TRANSACTION_TYPE = {\n  TRADE: 'trade',\n  WAIVER: 'waiver',\n  FREE_AGENT: 'free_agent'\n}\n\nfunction App() {\n  // eslint-disable-next-line\n  const [league, setLeague] = useState({})\n  const [losers, setLosers] = useState([])\n  const [members, setMembers] = useState([])\n  // eslint-disable-next-line\n  const [nflState, setNflState] = useState({});\n  const [transactions, setTransactions] = useState({})\n  useEffect(() => {\n    (async () => {\n      const [league, rosters, users, nflState] = await Promise.all([\n        getLeague(),\n        getRosters(),\n        getUsers(),\n        getNFLState(),\n      ])\n      setLeague(league)\n      setNflState(nflState)\n      const members = users.map(({\n        user_id,\n        display_name,\n        metadata: {\n          team_name\n        }\n      }) => {\n        const {\n          roster_id,\n          settings: {\n            wins,\n            losses,\n            ties\n          }\n        } = rosters.find(roster => roster.owner_id === user_id)\n        return {\n          user_id,\n          roster_id,\n          display_name,\n          team_name,\n          wins,\n          losses,\n          ties\n        }\n      })\n      setMembers(members.sort((a, b) => a.roster_id - b.roster_id))\n    })()\n  }, [])\n\n  async function handleSelect(e) {\n    const leg = e.target.value\n    if (Number.isNaN(+leg)) return\n    const [transactions, matchups] = await Promise.all([\n      getTransactions(leg),\n      getMatchups(leg),\n    ])\n\n    const losers = matchups.reduce((acc, curr) => {\n      const { matchup_id, points, roster_id } = curr\n      const prev = acc[matchup_id]\n      if (prev && prev.points !== points) {\n        acc[matchup_id] = prev.points < points ? prev : { roster_id, points }\n      } else if (!prev) {\n        acc[matchup_id] = { roster_id, points }\n      } else {\n        delete acc[matchup_id]\n      }\n      return acc\n    }, {})\n    setLosers(Object.values(losers))\n    const trans_totals = transactions.reduce((acc, { adds, status, type }) => {\n      if (status !== 'complete' || !adds) return acc\n      switch (type) {\n        case TRANSACTION_TYPE.WAIVER:\n        case TRANSACTION_TYPE.FREE_AGENT: {\n          // adds are maps of player_id => roster_id\n          Object.values(adds).forEach(roster_id => {\n            const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n            acc[roster_id] = { ...prev, adds: prev.adds ? prev.adds + 1 : 1 }\n          })\n          break\n        }\n        case TRANSACTION_TYPE.TRADE: {\n          Object.values(adds).forEach(roster_id => {\n            const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n            acc[roster_id] = { ...prev, trades: prev.trades ? prev.trades + 1 : 1 }\n          })\n          break\n        }\n        default:\n      }\n      return acc\n    }, {})\n    setTransactions(trans_totals)\n  }\n\n  function genTableData() {\n    console.log(losers);\n    const table_data = members.map(({ roster_id, display_name, team_name, wins, losses, ties }) => {\n      const { adds, trades } = transactions[roster_id] ?? { adds: 0, trades: 0 }\n      const adds_total = adds * Settings.ADD\n      const trades_total = trades * Settings.TRADE\n      const loss = losers.find((loser) => roster_id === loser.roster_id) ? 1 : 0\n      return {\n        header: team_name ?? display_name,\n        loss,\n        record: `${wins}-${losses}-${ties}`,\n        adds,\n        adds_total,\n        trades,\n        trades_total,\n        total: adds_total + trades_total + (loss * Settings.LOSS)\n      }\n    })\n    return table_data\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"select-wrapper\">\n          <label htmlFor=\"leg\">Week: </label>\n          <select name=\"leg\" onChange={handleSelect}>\n            <option disabled selected key=\"placeholder\" value=\"placeholder\">Select a Week</option>\n            {\n              new Array(Settings.WEEKS).fill(0).map((_, i) => <option key={i + 1} value={i + 1}>{i + 1}</option>)\n            }\n          </select>\n        </div>\n        <table>\n          <caption>\n            <strong className=\"caption-heading\">Weekly Costs Summary:</strong>\n            <br />\n            <span className=\"caption-summary\">\n              The Loss column is calculated based on the current state of the weeks matchup.\n              Check back after the week has ended for the most accurate results.\n              </span>\n          </caption>\n          <thead>\n            <tr>\n              <th>Team</th>\n              <th>Record</th>\n              <th>Adds ($3/ea)</th>\n              <th>Trades ($10/ea)</th>\n              <th>Loss</th>\n              <th>Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              genTableData().map(data => (\n                <tr key={data.roster_id}>\n                  <th scope=\"row\">{data.header}</th>\n                  <td>{data.record}</td>\n                  <td>${data.adds_total} ({data.adds})</td>\n                  <td>${data.trades_total} ({data.trades})</td>\n                  <td>${data.loss * Settings.LOSS}</td>\n                  <td>${data.total}</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}