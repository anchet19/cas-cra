{"version":3,"sources":["league-settings.js","App.js","reportWebVitals.js","index.js"],"names":["settings","LOSS","ADD","TRADE","ID","WEEKS","baseUrl","getLeague","a","fetch","Settings","then","res","json","getRosters","getUsers","getTransactions","leg","TRANSACTION_TYPE","App","useState","setLeague","transactions","setTransactions","members","setMembers","e","target","value","Number","isNaN","trans_totals","reduce","acc","adds","status","type","Object","values","forEach","roster_id","prev","trades","useEffect","rosters","users","map","user_id","display_name","team_name","metadata","find","roster","owner_id","wins","losses","ties","sort","b","className","htmlFor","name","onChange","disabled","selected","Array","fill","_","i","adds_total","trades_total","header","record","total","data","scope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7304adc.chunk.js","sourcesContent":["const settings = {\n  LOSS: 10,\n  ADD: 3,\n  TRADE: 10,\n  ID: '598360399619874816',\n  // ID: '726147679188553728',\n  WEEKS: 14\n}\n\nexport default settings","import './App.css';\nimport Settings from './league-settings'\nimport { useEffect, useState } from 'react'\n\nconst baseUrl = 'https://api.sleeper.app/v1'\nasync function getLeague() {\n  return fetch(`${baseUrl}/league/${Settings.ID}`).then(res => res.json())\n}\n\nasync function getRosters() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/rosters`).then(res => res.json())\n}\n\nasync function getUsers() {\n  return fetch(`${baseUrl}/league/${Settings.ID}/users`).then(res => res.json())\n}\n\nasync function getTransactions(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/transactions/${leg}`).then(res => res.json())\n}\nasync function getMatchups(leg) {\n  return fetch(`${baseUrl}/league/${Settings.ID}/matchups/${leg}`).then(res => res.json())\n}\n\nconst TRANSACTION_TYPE = {\n  TRADE: 'trade',\n  WAIVER: 'waiver',\n  FREE_AGENT: 'free_agent'\n}\n\nfunction App() {\n  // eslint-disable-next-line\n  const [league, setLeague] = useState({})\n  const [transactions, setTransactions] = useState({})\n  const [members, setMembers] = useState([])\n  useEffect(() => {\n    (async () => {\n      setLeague(await getLeague())\n      const rosters = await getRosters()\n      const users = await getUsers()\n      const members = users.map(({\n        user_id,\n        display_name,\n        metadata: {\n          team_name\n        }\n      }) => {\n        const {\n          roster_id,\n          settings: {\n            wins,\n            losses,\n            ties\n          }\n        } = rosters.find(roster => roster.owner_id === user_id)\n        return {\n          user_id,\n          roster_id,\n          display_name,\n          team_name,\n          wins,\n          losses,\n          ties\n        }\n      })\n      setMembers(members.sort((a, b) => a.roster_id - b.roster_id))\n    })()\n  }, [])\n\n  async function handleSelect(e) {\n    const leg = e.target.value\n    if (Number.isNaN(+leg)) return\n    const transactions = await getTransactions(leg)\n    const trans_totals = transactions.reduce((acc, { adds, status, type }) => {\n      if (status !== 'complete' || !adds) return acc\n      switch (type) {\n        case TRANSACTION_TYPE.WAIVER:\n        case TRANSACTION_TYPE.FREE_AGENT: {\n          // adds are maps of player_id => roster_id\n          Object.values(adds).forEach(roster_id => {\n            const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n            acc[roster_id] = { ...prev, adds: prev.adds ? prev.adds + 1 : 1 }\n          })\n          break\n        }\n        case TRANSACTION_TYPE.TRADE: {\n          Object.values(adds).forEach(roster_id => {\n            const prev = acc[roster_id] ?? { adds: 0, trades: 0 }\n            acc[roster_id] = { ...prev, trades: prev.trades ? prev.trades + 1 : 1 }\n          })\n          break\n        }\n        default:\n      }\n      return acc\n    }, {})\n    setTransactions(trans_totals)\n  }\n\n  function genTableData() {\n    const table_data = members.map(({ roster_id, display_name, team_name, wins, losses, ties }) => {\n      const { adds, trades } = transactions[roster_id] ?? { adds: 0, trades: 0 }\n      const adds_total = adds * Settings.ADD\n      const trades_total = trades * Settings.TRADE\n      return {\n        header: team_name ?? display_name,\n        record: `${wins}-${losses}-${ties}`,\n        adds,\n        adds_total,\n        trades,\n        trades_total,\n        total: adds_total + trades_total\n      }\n    })\n    return table_data\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"select-wrapper\">\n          <label htmlFor=\"leg\">Week: </label>\n          <select name=\"leg\" onChange={handleSelect}>\n            <option disabled selected key=\"placeholder\" value=\"placeholder\">Select a Week</option>\n            {\n              new Array(Settings.WEEKS).fill(0).map((_, i) => <option key={i + 1} value={i + 1}>{i + 1}</option>)\n            }\n          </select>\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>Team</th>\n              <th>Record</th>\n              <th>Adds</th>\n              <th>Adds Cost</th>\n              <th>Trades</th>\n              <th>Trades Cost</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              genTableData().map(data => (\n                <tr key={data.roster_id}>\n                  <th scope=\"row\">{data.header}</th>\n                  <td>{data.record}</td>\n                  <td>{data.adds}</td>\n                  <td>${data.adds_total}</td>\n                  <td>{data.trades}</td>\n                  <td>${data.trades_total}</td>\n                  <td>${data.total}</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}